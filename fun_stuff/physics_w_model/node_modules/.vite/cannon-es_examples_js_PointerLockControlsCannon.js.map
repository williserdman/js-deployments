{
  "version": 3,
  "sources": ["../cannon-es/examples/js/PointerLockControlsCannon.js"],
  "sourcesContent": ["import * as THREE from 'https://unpkg.com/three@0.122.0/build/three.module.js'\nimport * as CANNON from '../../dist/cannon-es.js'\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author schteppe / https://github.com/schteppe\n */\nclass PointerLockControlsCannon extends THREE.EventDispatcher {\n  constructor(camera, cannonBody) {\n    super()\n\n    this.enabled = false\n\n    this.cannonBody = cannonBody\n\n    // var eyeYPos = 2 // eyes are 2 meters above the ground\n    this.velocityFactor = 0.2\n    this.jumpVelocity = 20\n\n    this.pitchObject = new THREE.Object3D()\n    this.pitchObject.add(camera)\n\n    this.yawObject = new THREE.Object3D()\n    this.yawObject.position.y = 2\n    this.yawObject.add(this.pitchObject)\n\n    this.quaternion = new THREE.Quaternion()\n\n    this.moveForward = false\n    this.moveBackward = false\n    this.moveLeft = false\n    this.moveRight = false\n\n    this.canJump = false\n\n    const contactNormal = new CANNON.Vec3() // Normal in the contact, pointing *out* of whatever the player touched\n    const upAxis = new CANNON.Vec3(0, 1, 0)\n    this.cannonBody.addEventListener('collide', (event) => {\n      const { contact } = event\n\n      // contact.bi and contact.bj are the colliding bodies, and contact.ni is the collision normal.\n      // We do not yet know which one is which! Let's check.\n      if (contact.bi.id === this.cannonBody.id) {\n        // bi is the player body, flip the contact normal\n        contact.ni.negate(contactNormal)\n      } else {\n        // bi is something else. Keep the normal as it is\n        contactNormal.copy(contact.ni)\n      }\n\n      // If contactNormal.dot(upAxis) is between 0 and 1, we know that the contact normal is somewhat in the up direction.\n      if (contactNormal.dot(upAxis) > 0.5) {\n        // Use a \"good\" threshold value between 0 and 1 here!\n        this.canJump = true\n      }\n    })\n\n    this.velocity = this.cannonBody.velocity\n\n    // Moves the camera to the cannon.js object position and adds velocity to the object if the run key is down\n    this.inputVelocity = new THREE.Vector3()\n    this.euler = new THREE.Euler()\n\n    this.lockEvent = { type: 'lock' }\n    this.unlockEvent = { type: 'unlock' }\n\n    this.connect()\n  }\n\n  connect() {\n    document.addEventListener('mousemove', this.onMouseMove)\n    document.addEventListener('pointerlockchange', this.onPointerlockChange)\n    document.addEventListener('pointerlockerror', this.onPointerlockError)\n    document.addEventListener('keydown', this.onKeyDown)\n    document.addEventListener('keyup', this.onKeyUp)\n  }\n\n  disconnect() {\n    document.removeEventListener('mousemove', this.onMouseMove)\n    document.removeEventListener('pointerlockchange', this.onPointerlockChange)\n    document.removeEventListener('pointerlockerror', this.onPointerlockError)\n    document.removeEventListener('keydown', this.onKeyDown)\n    document.removeEventListener('keyup', this.onKeyUp)\n  }\n\n  dispose() {\n    this.disconnect()\n  }\n\n  lock() {\n    document.body.requestPointerLock()\n  }\n\n  unlock() {\n    document.exitPointerLock()\n  }\n\n  onPointerlockChange = () => {\n    if (document.pointerLockElement) {\n      this.dispatchEvent(this.lockEvent)\n\n      this.isLocked = true\n    } else {\n      this.dispatchEvent(this.unlockEvent)\n\n      this.isLocked = false\n    }\n  }\n\n  onPointerlockError = () => {\n    console.error('PointerLockControlsCannon: Unable to use Pointer Lock API')\n  }\n\n  onMouseMove = (event) => {\n    if (!this.enabled) {\n      return\n    }\n\n    const { movementX, movementY } = event\n\n    this.yawObject.rotation.y -= movementX * 0.002\n    this.pitchObject.rotation.x -= movementY * 0.002\n\n    this.pitchObject.rotation.x = Math.max(-Math.PI / 2, Math.min(Math.PI / 2, this.pitchObject.rotation.x))\n  }\n\n  onKeyDown = (event) => {\n    switch (event.code) {\n      case 'KeyW':\n      case 'ArrowUp':\n        this.moveForward = true\n        break\n\n      case 'KeyA':\n      case 'ArrowLeft':\n        this.moveLeft = true\n        break\n\n      case 'KeyS':\n      case 'ArrowDown':\n        this.moveBackward = true\n        break\n\n      case 'KeyD':\n      case 'ArrowRight':\n        this.moveRight = true\n        break\n\n      case 'Space':\n        if (this.canJump) {\n          this.velocity.y = this.jumpVelocity\n        }\n        this.canJump = false\n        break\n    }\n  }\n\n  onKeyUp = (event) => {\n    switch (event.code) {\n      case 'KeyW':\n      case 'ArrowUp':\n        this.moveForward = false\n        break\n\n      case 'KeyA':\n      case 'ArrowLeft':\n        this.moveLeft = false\n        break\n\n      case 'KeyS':\n      case 'ArrowDown':\n        this.moveBackward = false\n        break\n\n      case 'KeyD':\n      case 'ArrowRight':\n        this.moveRight = false\n        break\n    }\n  }\n\n  getObject() {\n    return this.yawObject\n  }\n\n  getDirection() {\n    const vector = new CANNON.Vec3(0, 0, -1)\n    vector.applyQuaternion(this.quaternion)\n    return vector\n  }\n\n  update(delta) {\n    if (this.enabled === false) {\n      return\n    }\n\n    delta *= 1000\n    delta *= 0.1\n\n    this.inputVelocity.set(0, 0, 0)\n\n    if (this.moveForward) {\n      this.inputVelocity.z = -this.velocityFactor * delta\n    }\n    if (this.moveBackward) {\n      this.inputVelocity.z = this.velocityFactor * delta\n    }\n\n    if (this.moveLeft) {\n      this.inputVelocity.x = -this.velocityFactor * delta\n    }\n    if (this.moveRight) {\n      this.inputVelocity.x = this.velocityFactor * delta\n    }\n\n    // Convert velocity to world coordinates\n    this.euler.x = this.pitchObject.rotation.x\n    this.euler.y = this.yawObject.rotation.y\n    this.euler.order = 'XYZ'\n    this.quaternion.setFromEuler(this.euler)\n    this.inputVelocity.applyQuaternion(this.quaternion)\n\n    // Add to the object\n    this.velocity.x += this.inputVelocity.x\n    this.velocity.z += this.inputVelocity.z\n\n    this.yawObject.position.copy(this.cannonBody.position)\n  }\n}\n\nexport { PointerLockControlsCannon }\n"],
  "mappings": "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",
  "names": []
}
